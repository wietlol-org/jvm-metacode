// hash: #25f4f237
// data: serializationKey:fe94616b-0bcd-4e0a-8f02-57f8a1570320
// @formatter:off

package metacode.api.lexer.data.models

import bitblock.api.serialization.BitSerializable
import java.util.UUID
import utils.common.Jsonable
import utils.common.emptyHashCode

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:gAeCSq

import metacode.api.lexer.sources.CharToken

// @tomplot:customCode:end
// @formatter:off

interface WildcardLexerExpression : BitSerializable, LexerExpression, Jsonable
{
	companion object
	{
		val serializationKey: UUID
			get() = UUID.fromString("fe94616b-0bcd-4e0a-8f02-57f8a1570320")
	}
	
	override val serializationKey: UUID
		get() = Companion.serializationKey
	
	fun isEqualTo(other: Any?): Boolean
	{
		if (this === other) return true
		if (other == null) return false
		if (other !is WildcardLexerExpression) return false
		
		
		return true
	}
	
	fun computeHashCode(): Int =
		emptyHashCode
	
	override fun toJson(): String =
		"""{}"""
	
	override fun duplicate(): WildcardLexerExpression
	
	// @formatter:on
	// @tomplot:customCode:start:32T3K8
	
	override fun findMatches(tokens: List<CharToken>, fromIndex: Int): Sequence<String> =
		sequenceOf(tokens[fromIndex].char.toString())
	
	override fun toExpressionString(): String =
		"."
	
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
