// hash: #399a878c
// data: serializationKey:9863e1de-9994-43a3-a753-fa72d40f0ec9
// @formatter:off

package metacode.api.parser.data.models

import bitblock.api.serialization.BitSerializable
import java.util.UUID
import utils.common.Jsonable
import utils.common.emptyHashCode
import utils.common.toJsonString
import utils.common.with

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:gAeCSq
// @tomplot:customCode:end
// @formatter:off

interface PriorityTreeRule : BitSerializable, ParserRule, Jsonable
{
	companion object
	{
		val serializationKey: UUID
			get() = UUID.fromString("9863e1de-9994-43a3-a753-fa72d40f0ec9")
	}
	
	override val serializationKey: UUID
		get() = Companion.serializationKey
	
	override val name: String
	
	val options: List<PriorityTreeRuleOption>
	
	fun isEqualTo(other: Any?): Boolean
	{
		if (this === other) return true
		if (other == null) return false
		if (other !is PriorityTreeRule) return false
		
		if (name != other.name) return false
		if (options != other.options) return false
		
		return true
	}
	
	fun computeHashCode(): Int =
		emptyHashCode
			.with(name)
			.with(options)
	
	override fun toJson(): String =
		"""{"name":${name.toJsonString()},"options":${options.toJsonString()}}"""
	
	override fun duplicate(): PriorityTreeRule
	
	// @formatter:on
	// @tomplot:customCode:start:32T3K8
	
	fun compileTree(): Collection<ParserRule>
	
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
