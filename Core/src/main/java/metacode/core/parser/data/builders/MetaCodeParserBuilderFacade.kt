// hash: #142a9fdb
// @formatter:off

package metacode.core.parser.data.builders

// Generated by BitBlock version 1.0.0

object MetaCodeParserBuilderFacade
{
	fun buildSimpleRule(body: SimpleRuleBuilder.() -> Unit) =
		SimpleRuleBuilder()
			.apply(body)
			.build()
	
	fun buildMultiOptionRule(body: MultiOptionRuleBuilder.() -> Unit) =
		MultiOptionRuleBuilder()
			.apply(body)
			.build()
	
	fun buildRuleOption(body: RuleOptionBuilder.() -> Unit) =
		RuleOptionBuilder()
			.apply(body)
			.build()
	
	fun buildPriorityTreeRule(body: PriorityTreeRuleBuilder.() -> Unit) =
		PriorityTreeRuleBuilder()
			.apply(body)
			.build()
	
	fun buildPriorityTreeRuleOption(body: PriorityTreeRuleOptionBuilder.() -> Unit) =
		PriorityTreeRuleOptionBuilder()
			.apply(body)
			.build()
	
	fun buildAnyOfParserExpression(body: AnyOfParserExpressionBuilder.() -> Unit) =
		AnyOfParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildSequenceParserExpression(body: SequenceParserExpressionBuilder.() -> Unit) =
		SequenceParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildLabelledParserExpression(body: LabelledParserExpressionBuilder.() -> Unit) =
		LabelledParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildOptionalParserExpression(body: OptionalParserExpressionBuilder.() -> Unit) =
		OptionalParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildRepeatingParserExpression(body: RepeatingParserExpressionBuilder.() -> Unit) =
		RepeatingParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildRuleParserExpression(body: RuleParserExpressionBuilder.() -> Unit) =
		RuleParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildTypeParserExpression(body: TypeParserExpressionBuilder.() -> Unit) =
		TypeParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildLiteralParserExpression(body: LiteralParserExpressionBuilder.() -> Unit) =
		LiteralParserExpressionBuilder()
			.apply(body)
			.build()
	
	fun buildWildcardParserExpression(body: WildcardParserExpressionBuilder.() -> Unit) =
		WildcardParserExpressionBuilder()
			.apply(body)
			.build()
}
// @formatter:on
